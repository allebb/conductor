#!/usr/bin/env bash

# Load some configuration and 'common' code in...
BINDIR=/etc/conductor/bin
source $BINDIR/conf/conductor.conf
source $BINDIR/_headers $1 $2

# Application specific...

# We'll check that the application directory doesn't already exist before we go any further!
if [ -d "$APPDIRECTORY" ]; then
	echo "The application already exists on this server!"
	exit 1
fi

# Now we'll prompt for some required information...
echo "Deploying application named: $APPNAME"
echo -n "Please enter the FQDN(s) this application: "
read DOMAIN
echo -n "Does this application require a MySQL DB? [Y/n] "
read MYSQLREQ
echo -n "Deploy and manage application with Git? [Y/n] "
read USEGIT

# If the user wants to use Git We'll ask them some respository information
if [[ "$USEGIT" == "n" || "$USEGIT" == "N" || "$USEGIT" == "no" || "$USEGIT" == "No" || "$USEGIT" == "NO" ]]
then
	GIT="false"
else
	GIT="true"
	echo ""
	echo -n "Please enter the Git repository URI: "
	read GITURI
	echo ""
fi

# Lets validate the Domain name to ensure it's valid!
PATTERN="^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$";
if [[ "$DOMAIN" =~ $PATTERN ]]; then
	DOMAIN=`echo $DOMAIN | tr '[A-Z]' '[a-z]'`
else
	echo "Invalid domain name, pease try again!"
	exit 1
fi

# Now we need to copy the virtual ho#t templat#
CONFIG=$NGINX_CONFIG/$APPNAME.conf
HLOGS=($NGINX_LOGS/$APPNAME)
sudo cp $NGINX_TPLS/nginx_vhost_template.tpl $CONFIG
sudo sed -i "s/@@DOMAIN@@/$DOMAIN/g" $CONFIG
sudo sed -i "s/@@APPNAME@@/$APPNAME/g" $CONFIG
sudo sed -i "s#@@HLOGS@@#/$HLOGS/#" $CONFIG

# Lets set up the directory structure and lock down some directory permissions.
sudo mkdir $APPDIRECTORY
sudo mkdir $HLOGS
sudo chown $WEB_SERVER_GROUP:$WEB_SERVER_GROUP $HLOGS -R
sudo chmod 755 $CONFIG

# Now we need to reload Nginx!
sudo $NGINX_INIT reload

echo ""
if [[ "$GIT" == "true" ]]
then
	echo "We'll now deploy your application using Git..."
	# We need to delete the previously created directory as the 'git clone' will clone into this folder.
	rm -Rf $APPDIRECTORY
	sudo git clone $GITURI $APPDIRECTORY
	# We'll now migrate and clear cache etc.
	#sudo /usr/bin/composer upgrade
	laravel_migrate
else
	echo "As you have not choosen to deploy your application using Git you must first"
	echo "manually copy your application into: $APPDIRECTORY/"
fi

# If a MySQL database is required we'll create one now!
if [[ "$MYSQLREQ" == "y" || "$MYSQLREQ" == "Y" || "$MYSQLREQ" == "yes" || "$MYSQLREQ" == "Yes" ]]
then
	echo ""
	echo -n "Please enter a password for the MySQL database: "
	read USERMYSQLPASS
	create_mysql db_$APPNAME u_$APPNAME $USERMYSQLPASS
fi

# We'll set some last minute file ownership permissions...
sudo chown $WEB_SERVER_GROUP:$WEB_SERVER_GROUP $APPDIRECTORY -R
echo ""
echo "...finished!"